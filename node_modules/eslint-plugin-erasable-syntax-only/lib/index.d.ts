import * as _typescript_eslint_utils_ts_eslint from '@typescript-eslint/utils/ts-eslint';
export { rules } from './rules/index.js';

declare const plugin: {
    configs: {
        readonly recommended: {
            plugins: {
                "erasable-syntax-only": /*elided*/ any;
            };
            rules: {
                [k: string]: string;
            };
        };
    };
    meta: {
        name: string;
        version: string;
    };
    rules: {
        enums: _typescript_eslint_utils_ts_eslint.RuleModule<"enum", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        "import-aliases": _typescript_eslint_utils_ts_eslint.RuleModule<"importAlias" | "importAliasDefaultFix" | "importAliasNamespaceFix", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        namespaces: _typescript_eslint_utils_ts_eslint.RuleModule<"namespace", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        "parameter-properties": _typescript_eslint_utils_ts_eslint.RuleModule<"parameterProperty", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
    };
};

export { plugin as default, plugin };
